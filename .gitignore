# Generated by Cargo
# will have compiled files and executables
debug
target
Cargo.lock
benches/
coverage/

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated by cargo mutants
# Contains mutation testing data
**/mutants.out*/

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Rust build artifacts
/target/
**/*.rs.bk
*.pdb

# Cargo
Cargo.lock
Cargo.toml.bak

# IDE and editor files
.vscode/
.cursor/
.cursorrules
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Documentation build
/docs/target/
/docs/book/

# Test artifacts
/coverage/
*.profraw
*.profdata
*.gcov
*.gcda
*.gcno

# Benchmark results
target/criterion/

# Performance profiling
*.svg
*.html
flamegraph.svg
perf.data
perf.data.old

# Environment files
.env
.env.local
.env.*.local

# Logs
*.log
logs/
log/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.bak
*.backup
*.old

# Data files (except examples)
*.csv
*.json
*.parquet
*.h5
*.hdf5
data/
datasets/

# Keep example data
!examples/csv/*.csv

# Model files
*.model
*.pkl
*.joblib
models/

# Cache directories
.cache/
cache/

# Node modules (if using any JS tooling)
node_modules/

# Python virtual environments (if using any Python tooling)
venv/
env/
.venv/
.env/

# Jupyter notebooks
*.ipynb
.ipynb_checkpoints/

# Docker
.dockerignore
Dockerfile.bak

# CI/CD artifacts
.github/workflows/.cache/
.circleci/
.travis.yml.bak

# Local configuration
config.local.toml
settings.local.toml

# Database files
*.db
*.sqlite
*.sqlite3

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Generated documentation
docs/api/
docs/coverage/

# Rust specific
**/*.rs.bk
*.pdb

# Tarpaulin coverage reports
tarpaulin-report.html
tarpaulin-report.xml

# Clippy cache
.clippy.toml

# Rustfmt cache
.rustfmt.toml

# Cargo audit cache
.cargo-audit.toml

# Benchmark cache
criterion/

# Flamegraph output
flamegraph.svg
perf.data*

# Memory profiling
*.heapprofile
*.mprof

# Code coverage
coverage/
*.profraw
*.profdata

# Generated bindings
bindings/

# FFI artifacts
*.so
*.dll
*.dylib

# Cross-compilation artifacts
cross/

# WASM artifacts
pkg/
*.wasm

# Documentation artifacts
docs/book/
docs/api/

# Local development
.local/
local/

# Secrets and keys
*.key
*.pem
*.p12
*.pfx
secrets/
keys/

# Database dumps
*.dump
*.sql

# Large data files
*.bin
*.dat
*.raw

# Compressed data
*.gz
*.bz2
*.xz

# Temporary build artifacts
build/
dist/

# Package artifacts
*.crate
*.tar.gz

# Profiling data
*.prof
*.trace

# Memory dumps
*.dump
*.core

# System files
.fuse_hidden*
.nfs*

# Editor specific
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.idea/workspace.xml
.idea/tasks.xml

# OS specific
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db
desktop.ini

# Windows
*.lnk

# Linux
*~

# macOS
.AppleDouble
.LSOverride

# Keep important files
!examples/csv/*.csv
!Cargo.toml
!Cargo.lock
!.gitignore
!README.md
!LICENSE
!docs/*.md
Cargo.lock
