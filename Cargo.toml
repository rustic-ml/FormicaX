[package]
name = "formica"
version = "0.1.0"
edition = "2021"
authors = ["FormicaX Team <durhamcelsis@gmail.com>"]
description = "High-performance Rust clustering library for financial data analysis"
license = "Apache-2.0"
repository = "https://github.com/rustic-ml/FormicaX"
documentation = "https://docs.rs/formica"
readme = "README.md"
keywords = ["clustering", "machine-learning", "finance", "ohlcv", "trading"]
categories = ["algorithms", "science", "data-structures", "mathematics", "visualization"]
homepage = "https://github.com/rustic-ml/FormicaX"
exclude = [
    "examples/*",
    "benches/*",
    "coverage/*",
    "target/*",
    ".git/*",
    ".gitignore",
    ".cursorrules",
    "Cargo.lock",
    "FormicaX.png",
    "docs/*"
]

[dependencies]
# Core dependencies
serde = { version = "1.0", features = ["derive"] }
chrono = { version = "0.4", features = ["serde"] }
thiserror = "1.0"

# CSV and data processing
csv = "1.3"
ndarray = { version = "0.15", features = ["blas"] }

# Parallel processing and concurrency
rayon = { version = "1.7", optional = true }
crossbeam = { version = "0.8", optional = true }
parking_lot = { version = "0.12", optional = true }
dashmap = { version = "5.4", optional = true }
num_cpus = "1.16"

# Memory management
memmap2 = "0.9"

# Numeric operations
num-traits = "0.2"

# Clustering algorithms
ndarray-stats = { version = "0.5", optional = true }
rand = { version = "0.8", optional = true }
rand_distr = { version = "0.4", optional = true }
statrs = { version = "0.16", optional = true }

# Metadata and error handling
serde_json = "1.0"

[dev-dependencies]
# Testing
criterion = "0.5"
proptest = "1.3"
tempfile = "3.8"

# Documentation
rustdoc-stripper = "0.1"

[features]
default = ["std", "clustering"]
std = []
simd = []  # Modern Rust SIMD will be used via std::simd when stable
parallel = ["rayon", "crossbeam", "parking_lot", "dashmap"]
clustering = ["ndarray-stats", "rand", "rand_distr", "statrs"]

# Enable all features for development
dev = ["simd", "parallel", "clustering"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

[profile.bench]
opt-level = 3
lto = true
codegen-units = 1

[[bench]]
name = "kmeans_benchmark"
harness = false

[[bench]]
name = "dbscan_benchmark"
harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.release]
pre-release-commit-message = "chore: release {{version}}"
tag-message = "{{project_name}} {{version}}"
tag-name = "{{version}}" 